{"version":3,"sources":["gameHelpers.js","components/styles/variables.js","components/styles/respondTo.js","components/styles/StyledStage.js","components/styles/StyledCell.js","tetrominos.js","components/Cell.js","components/Stage.js","components/styles/StyledNext.js","components/Next.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/styles/StyledPauseButton.js","components/PauseButton.js","components/styles/StyledTetris.js","hooks/usePlayer.js","hooks/useStage.js","hooks/useNext.js","components/Tetris.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","breakpoints","xs","xm","xl","sm","sl","respondTo","Object","keys","reduce","accumulator","label","css","StyledStage","styled","div","props","height","width","StyledCell","color","type","TETROMINOS","0","shape","W","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","React","memo","Stage","map","row","cell","key","StyledNext","Next","next","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","StyledPauseButton","PauseButton","StyledTetrisWrapper","StyledTetris","usePlayer","useState","collided","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","resetPlayer","useCallback","tetro","STAGE_WIDTH","prev","clonedPlayer","JSON","parse","stringify","offset","useStage","resetTetro","setStage","rowsCleared","setRowsCleared","test","setTest","useEffect","sweepRows","newStage","acc","findIndex","every","console","log","push","unshift","prevStage","forEach","value","updateStage","useNext","setNext","setTetro","nxt","newNext","Tetris","dropTime","setDropTime","setGameOver","paused","setPaused","pauseText","setPauseText","startText","setStartText","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","className","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e836f5b.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n    Array.from(Array(STAGE_HEIGHT), () =>\n        new Array(STAGE_WIDTH).fill([0, 'clear'])\n    );\nexport const NEXT_WIDTH = 7;\nexport const NEXT_HEIGHT = 5;\nexport const createNext = () =>\n    Array.from(Array(NEXT_HEIGHT), () =>\n        new Array(NEXT_WIDTH).fill([0, 'clear'])\n    );\nexport const checkCollision = (player,  stage, { x: moveX, y: moveY }) => {\n    for (let y = 0; y < player.tetromino.length; y += 1) {\n        for (let x = 0; x < player.tetromino[y].length; x += 1) {\n            if (player.tetromino[y][x] !== 0) {\n                if (\n                !stage[y + player.pos.y + moveY] ||\n                !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n                stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== \n                    'clear'\n                ){\n                    return true;\n                }\n            }\n\n        }\n    }\n}","export const breakpoints = {\n\txs: '320px',\n\txm:'375px',\n\txl:'425px',\n\tsm: '768px',\n\tsl:'1024px',\n};","import { css } from 'styled-components';\nimport { breakpoints } from './variables';\n\nexport const respondTo = Object.keys(breakpoints).reduce((accumulator, label) => {\n\taccumulator[label] = (...args) => css`\n\t\t@media (min-width: ${breakpoints[label]}) {\n\t\t\t${css(...args)};\n\t\t}\n\t`;\n\treturn accumulator;\n}, {});","import styled from 'styled-components';\nimport { respondTo } from './respondTo';\nexport const StyledStage = styled.div`\n    display: grid;\n    grid-template-rows: repeat(\n        ${props => props.height},\n        calc(25vw / ${props => props.width})\n    );\n    grid-template-columns: repeat(${props => props.width}, 1fr);\n    grid-gap: 1px;\n    border: 5px solid #333;\n    width: 100%;\n    margin: 20px 0px 0px 0px;\n    max-width: 25vw;\n    background: #4e4c4c;\n\n    ${respondTo.xs`\n        grid-template-rows: repeat( 20,calc(62vw / 12) );\n        max-width: 52vw;\n    `}\n   \n    ${respondTo.xl`\n        grid-template-rows: repeat( 20, calc(48vw / 12) );\n        max-width: 45vw;\n    `}\n     ${respondTo.sm`\n        grid-template-rows: repeat( 20, calc(35vw / 12) );\n        max-width: 45vw;\n    `}\n     ${respondTo.sl`\n        grid-template-rows: repeat(\n        ${props => props.height},\n        calc(25vw / ${props => props.width})\n    );\n    max-width: 25vw;\n\t`}\n`;\n","import styled from 'styled-components';\n\n\nexport const StyledCell = styled.div`\n    width: auto;\n    background: rgba(${props => props.color}, 0.8);\n    border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-top-color: rgba(${props => props.color}, 1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n`\n","export const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0' },\n    W: { shape: [[1]], color: '255, 255, 255'},\n    I: {\n        shape: [\n                    [0, 'I', 0, 0],\n                    [0, 'I', 0, 0],\n                    [0, 'I', 0, 0],\n                    [0, 'I', 0, 0]\n                ],\n            color: '80, 227, 230',\n        },\n\n    J: {\n        shape: [\n                    [0, 'J', 0],\n                    [0, 'J', 0],\n                    ['J', 'J', 0]\n                ],\n            color: '36, 95, 223',\n        },\n    L: {\n        shape: [\n                    [0, 'L', 0],\n                    [0, 'L', 0],\n                    [0, 'L', 'L']\n                ],\n            color: '223, 173, 36',\n        },\n    O: {\n        shape: [\n                    ['O', 'O'],\n                    ['O', 'O']\n                ],\n            color: '223, 217, 36',\n        },\n    \n    S: {\n        shape: [\n                    [0, 'S', 'S'],\n                    ['S', 'S', 0],\n                    [0, 0, 0]\n                ],\n            color: '48, 211, 56',\n        },\n    T: {\n        shape: [\n                    [0, 0, 0],\n                    ['T', 'T', 'T'],\n                    [0, 'T', 0]\n                ],\n            color: '132, 61, 198',\n        },\n    Z: {\n        shape: [\n                    ['Z', 'Z', 0],\n                    [0, 'Z', 'Z'],\n                    [0, 0, 0]\n                ],\n            color: '227, 78, 78',\n        },\n    \n\n}\n\nexport const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino = \n        tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return TETROMINOS[randTetromino];\n\n}\n","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\n\nconst Cell = ({ type }) => (\n    <StyledCell type={type} color={TETROMINOS[type].color} />\n    )\n\nexport default React.memo(Cell);\n","import React from 'react';\n\nimport { StyledStage } from './styles/StyledStage';\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n    <StyledStage width={stage[0].length} height={stage.length}>\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n    </StyledStage>\n);\n\n\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledNext = styled.div`\n    display: grid;\n    grid-template-rows: repeat(\n        ${props => props.height},\n        calc(10vw / ${props => props.width})\n    );\n    grid-template-columns: repeat(${props => props.width}, 1fr);\n    grid-gap: 1px;\n    margin: 20px 0 20px 0;\n    border: 2px solid #333;\n    width: 50%;\n    padding: 5px;\n    max-width: 25vw;\n    background: #111;\n\n`;\n","import React from 'react';\n\nimport { StyledNext } from './styles/StyledNext';\nimport Cell from './Cell';\n\nconst Next = ({ next }) => (\n    <StyledNext width={next[0].length} height={next.length}>\n        {next.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n    </StyledNext>\n);\n\n\n\nexport default Next;\n","import styled from 'styled-components';\nimport { respondTo } from './respondTo';\nexport const StyledDisplay = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    margin: 20px 0 20px 0;\n    padding: 8px;\n    border: 4px solid #333;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    color: ${props => (props.gameOver ? 'red' : '#999')};\n    background: #000;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    justify-content: center;\n    ${respondTo.xs`\n        width: 60%;\n        font-size: 0.8rem;\n    `}\n    ${respondTo.xl`\n        width: 70%;\n        font-size: 1rem;\n    `}\n     ${respondTo.sm`\n        width: 100%;\n    `}\n`;\n","import React from 'react';\n\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;\n","import styled from 'styled-components';\nimport { respondTo } from './respondTo';\nexport const StyledStartButton = styled.button`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 8px;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: 5px solid #333333;\n    color: white;\n    background: #1d501f;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n    ${respondTo.xs`\n        width: 60%;\n        font-size: 0.8rem;\n    `}\n    ${respondTo.xl`\n        width: 70%;\n        font-size: 1rem;\n    `}\n     ${respondTo.sm`\n        width: 100%;\n    `}\n`\n","import React from 'react';\n\nimport { StyledStartButton } from './styles/StyledStartButton' \n\nconst StartButton = ({ callback, text }) => (\n    <StyledStartButton onClick={callback}>{text}</StyledStartButton>\n)\n\nexport default StartButton;\n","import styled from 'styled-components';\nimport { respondTo } from './respondTo';\nexport const StyledPauseButton = styled.button`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 8px;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: 5px solid #333333;\n    color: white;\n    background: #582525;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n    ${respondTo.xs`\n        width: 60%;\n        font-size: 0.8rem;\n    `}\n    ${respondTo.xl`\n        width: 70%;\n        font-size: 1rem;\n    `}\n     ${respondTo.sm`\n        width: 100%;\n    `}\n`\n","import React from 'react';\n\nimport { StyledPauseButton } from './styles/StyledPauseButton' \n\nconst PauseButton = ({ callback, text }) => (\n    \n    <StyledPauseButton onClick={callback}>{text}</StyledPauseButton>\n    \n)\n\nexport default PauseButton;\n","import styled from 'styled-components';\n\nexport const StyledTetrisWrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background: #bba050;\n    background-size: cover;\n    overflow: hidden;\n`\n\n\nexport const StyledTetris = styled.div`\n    display: flex;\n    align-items: flex-start;\n    margin: 50px auto;\n    width: 600px;\n\n    aside {\n        width: 100%;\n        max-width: 200px;\n        display: block;\n        padding: 0 20px;\n    }\n    \n`\n","import { useState, useCallback } from 'react';\nimport { TETROMINOS } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {    \n    const [player, setPlayer] = useState({\n        pos: { x: 0, y: 0 },\n        tetromino: TETROMINOS[0].shape,\n        collided: false,\n    });\n\n    const rotate = (matrix, dir) => {\n        const rotatedTetro = matrix.map((_, index) => \n            matrix.map(col => col[index]),\n        );\n        if (dir > 0) return rotatedTetro.map(row => row.reverse());\n        return rotatedTetro.reverse();\n    };\n\n\n    const playerRotate = (stage, dir) => {\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir)\n        const pos = clonedPlayer.pos.x;\n        let offset = 1;\n        while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })){\n            clonedPlayer.pos.x += offset;\n            offset = -(offset + (offset > 0 ? 1 : -1));\n            if (offset > clonedPlayer.tetromino[0].length){\n                rotate(clonedPlayer.tetromino, -dir);\n                clonedPlayer.pos.x = pos;\n                return;\n            }\n        }\n        setPlayer(clonedPlayer);\n        \n    }\n    const updatePlayerPos = ({ x, y, collided }) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n            collided,\n        }))\n    };\n    const resetPlayer = useCallback((tetro) => {\n        setPlayer({\n            pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n            tetromino: tetro.tetromino,\n            collided: false,\n        })\n    }, []);\n\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\n}\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer, tetro, resetTetro, next) => {\n    const [stage, setStage] = useState(createStage());\n    const [rowsCleared, setRowsCleared] = useState(0);\n    const [test, setTest] = useState(0);\n    \n    useEffect(() => {\n        setRowsCleared(0);\n        const sweepRows = newStage => \n            newStage.reduce((acc, row) => {\n                if (row.findIndex(cell => cell[0] === 0) === -1 \n                && row.every(cell => cell[0] !== 'W' ) ) {\n                    setTest(1);\n                    console.log('test: ');\n                    console.log(test);\n                    console.log('^-- flash white');\n                    acc.push(row.map(() => ['W', 'merged']));\n                    return acc;    \n                    \n                } else if (row.every(cell => cell[0] === 'W')) {\n                    setRowsCleared(prev => prev + 1);\n                    console.log('unshift');\n                    acc.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n                    return acc;  \n                }                    \n                acc.push(row);\n                return acc;\n            }, [])\n\n        const updateStage = prevStage => {\n            const newStage = prevStage.map(row => \n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n                );\n            player.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                    if (value !== 0) {\n                        newStage[y + player.pos.y][x + player.pos.x] = [\n                            value,\n                            `${player.collided ? 'merged' : 'clear'}`\n                        ];\n                    }\n                });\n            });\n            if (player.collided) {\n                console.log(\"here?\")\n                resetTetro(next);\n                resetPlayer(tetro);\n                return sweepRows(newStage);\n            }\n            if (test === 1){\n                setTest(2);\n            }\n            if (test === 2){\n                setTest(0);\n                return sweepRows(newStage);\n            }\n            return newStage;\n        };\n        setStage(prev => updateStage(prev))\n\n    }, [next, player, resetPlayer, resetTetro, rowsCleared, test, tetro]);\n    return [stage, setStage, rowsCleared];\n}\n","import { useState, useCallback } from 'react';\nimport { createNext } from '../gameHelpers';\nimport {randomTetromino } from '../tetrominos';\n\n\nexport const useNext = () => {\n    const [next, setNext] = useState(createNext());\n    const [tetro, setTetro] = useState({\n        pos: { x: 0, y: 0 },\n        tetromino: randomTetromino().shape,\n    });\n\n    tetro.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n            if (value !== 0) {\n                next[y + 1][x + 2] = [\n                    value,\n                    'merged'\n                ];\n            }\n        });\n    });\n\n    const resetTetro = useCallback((nxt) => {\n        setTetro({\n            pos: { x: 0, y: 0 },\n            tetromino: randomTetromino().shape,\n            collided: false,\n        })\n\n        var newNext = nxt.map(row => \n            row.map(() => [0, 'clear'])\n            );\n        setNext(newNext);\n    }, []);\n    return [next, tetro, resetTetro]\n    }","import React, { useState } from 'react';\n\n\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Components\nimport Stage from './Stage';\nimport Next from './Next';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport PauseButton from './PauseButton';\n\n//Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'\n\n\n//Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useNext } from '../hooks/useNext';\nimport { useGameStatus } from '../hooks/useGameStatus';\n//import { clone } from '@babel/types';\n\n\n// Components\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n    const [paused, setPaused] = useState(false);\n    const [pauseText, setPauseText] = useState(\"Pause Game\");\n    const [startText, setStartText] = useState(\"Start Game\");\n    const [next, tetro, resetTetro] = useNext();\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer(tetro);\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer, tetro, resetTetro, next);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n        rowsCleared\n    );\n\n    const movePlayer = dir => {\n        if (!checkCollision(player, stage, {x: dir, y: 0 })){\n            updatePlayerPos({ x: dir, y: 0})\n        }\n        \n    }\n\n    const startGame = () => {\n        // Reset everything\n        setStage(createStage());\n        setPaused(false);\n        resetTetro(next);\n        resetPlayer(tetro);        \n        setDropTime(1000);\n        setGameOver(false);\n        setScore(0);\n        setRows(0);\n        setLevel(0);\n        setStartText(\"Restart Game\");\n        setPauseText(\"Pause Game\");\n        \n    }\n\n    const pauseGame = () => {\n        if (paused !== true) {\n            setDropTime(null);\n            setPaused(true);\n            setPauseText(\"Unpause Game\");\n        } else if (paused === true) {\n            setDropTime(1000 / (level + 1) + 200);\n            setPaused(false);\n            setPauseText(\"Pause Game\");\n        }\n    }\n\n    const drop = () => {\n        //Increase level when player has cleared 10 rows\n        if (rows > (level + 1) * 10) {\n            setLevel(prev => prev + 1);\n            // Also increase speed\n            setDropTime(1000 / (level + 1) + 200);\n        }\n\n        if (!checkCollision(player, stage, { x: 0, y: 1})){\n            updatePlayerPos({ x: 0, y: 1, collided: false});\n            \n        } else {\n            if (player.pos.y < 1){\n                console.log(\"GAME OVER!!!\");\n                setStartText(\"Start Game\");\n                setPauseText(\"Pause Game\");\n                setGameOver(true);\n                setDropTime(null);\n            }\n            updatePlayerPos({ x: 0, y: 0, collided: true});\n        }\n    }\n\n\n    const keyUp = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 40 || keyCode === 32) {\n                setDropTime(1000 / (level + 1));\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n        setDropTime(null);\n        drop();\n    }\n\n    const move = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 37) {\n                movePlayer(-1)\n            } else if (keyCode === 39) {\n                movePlayer(1);\n            } else if(keyCode === 40) {\n                dropPlayer();\n            } else if (keyCode === 38) {\n                playerRotate(stage, 1);\n            } \n        }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime)\n\n    return (\n    <StyledTetrisWrapper \n        role=\"button\" \n        tabIndex=\"0\" \n        onKeyDown={e => move(e)} \n        onKeyUp={keyUp}\n    >\n        <StyledTetris>\n            <Stage stage={stage} />\n            <aside>\n                {gameOver ? (\n                    <Display gameOver ={gameOver} text=\"Game Over\" />\n                ) : (\n                            <div>\n                                <Next next={next} />\n                                <div className=\"buttons\">\n                                    <Display text={`Score: ${score}`} />\n                                    <Display text={`Rows: ${rows}`} />\n                                    <Display text={`Level: ${level}`} />\n                                </div>\n\n                            </div>\n                )}\n                <StartButton callback={startGame} text={startText} />\n                <PauseButton callback={pauseGame} text={pauseText} />\n            </aside>\n        </StyledTetris>\n    </StyledTetrisWrapper>\n    )\n}\n\nexport default Tetris;\n","import { useState, useEffect, useCallback } from 'react';\n\n\n\nexport const useGameStatus = rowsCleared => {\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n    \n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        if (rowsCleared > 0){\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n            setRows(prev => prev + rowsCleared);\n        }\n    }, [level, linePoints, rowsCleared]);\n\n    useEffect(() => {\n        calcScore();\n    }, [calcScore, rowsCleared, score]);\n\n    return [score, setScore, rows, setRows, level, setLevel];\n\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n    <div className=\"App\">\n        <Tetris />\n    </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}